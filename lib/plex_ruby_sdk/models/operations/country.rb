# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    
      # The filter query string for country media items.
      class Country
        extend T::Sig
        include Crystalline::MetadataFields


        field :filter, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('filter') } }
        # The unique identifier for the country.
        # NOTE: This is different for each Plex server and is not globally unique.
        # 
        field :id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }
        # The country of origin of this media item
        field :tag, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tag') } }


        sig { params(filter: ::String, id: ::Integer, tag: ::String).void }
        def initialize(filter: nil, id: nil, tag: nil)
          @filter = filter
          @id = id
          @tag = tag
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @filter == other.filter
          return false unless @id == other.id
          return false unless @tag == other.tag
          true
        end
      end
    end
  end
end
