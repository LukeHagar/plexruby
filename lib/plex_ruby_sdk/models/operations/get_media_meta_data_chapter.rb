# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    
      # The thumbnail for the chapter
      class GetMediaMetaDataChapter
        extend T::Sig
        include Crystalline::MetadataFields


        field :end_time_offset, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('endTimeOffset') } }

        field :filter, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('filter') } }

        field :id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }

        field :index, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('index') } }

        field :start_time_offset, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('startTimeOffset') } }

        field :thumb, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('thumb') } }


        sig { params(end_time_offset: ::Integer, filter: ::String, id: ::Integer, index: ::Integer, start_time_offset: ::Integer, thumb: ::String).void }
        def initialize(end_time_offset: nil, filter: nil, id: nil, index: nil, start_time_offset: nil, thumb: nil)
          @end_time_offset = end_time_offset
          @filter = filter
          @id = id
          @index = index
          @start_time_offset = start_time_offset
          @thumb = thumb
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @end_time_offset == other.end_time_offset
          return false unless @filter == other.filter
          return false unless @id == other.id
          return false unless @index == other.index
          return false unless @start_time_offset == other.start_time_offset
          return false unless @thumb == other.thumb
          true
        end
      end
    end
  end
end
