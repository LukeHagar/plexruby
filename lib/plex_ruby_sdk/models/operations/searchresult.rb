# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class SearchResult
        extend T::Sig
        include Crystalline::MetadataFields

        # The score of the search result, typically a float value between 0 and 1.
        field :score, ::Float, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('score') } }

        field :directory, T.nilable(Models::Operations::GetSearchAllLibrariesDirectory), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Directory') } }

        field :metadata, T.nilable(Models::Operations::GetSearchAllLibrariesMetadata), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Metadata') } }


        sig { params(score: ::Float, directory: T.nilable(Models::Operations::GetSearchAllLibrariesDirectory), metadata: T.nilable(Models::Operations::GetSearchAllLibrariesMetadata)).void }
        def initialize(score: nil, directory: nil, metadata: nil)
          @score = score
          @directory = directory
          @metadata = metadata
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @score == other.score
          return false unless @directory == other.directory
          return false unless @metadata == other.metadata
          true
        end
      end
    end
  end
end
