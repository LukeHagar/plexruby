# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class GetSearchAllLibrariesDirectory
        extend T::Sig
        include Crystalline::MetadataFields


        field :id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }
        # The unique identifier path for the search result item.
        field :key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('key') } }
        # The identifier for the library section.
        field :library_section_id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionID') } }
        # The key corresponding to the library section.
        field :library_section_key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionKey') } }
        # The title of the library section.
        field :library_section_title, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionTitle') } }

        field :tag, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tag') } }
        # The type of the directory.
        field :type, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('type') } }
        # The number of items associated with this search result.
        field :count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('count') } }
        # The filter string used to query this specific item in the library.
        field :filter, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('filter') } }

        field :library_section_type, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionType') } }
        # The unique identifier for the tag associated with this search result.
        field :tag_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tagKey') } }
        # The type of tag associated with this search result (e.g., Director, Actor).
        field :tag_type, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tagType') } }
        # The URL to the thumbnail image associated with this search result.
        field :thumb, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('thumb') } }


        sig { params(id: ::Integer, key: ::String, library_section_id: ::Integer, library_section_key: ::String, library_section_title: ::String, tag: ::String, type: ::String, count: T.nilable(::Integer), filter: T.nilable(::String), library_section_type: T.nilable(::Integer), tag_key: T.nilable(::String), tag_type: T.nilable(::Integer), thumb: T.nilable(::String)).void }
        def initialize(id: nil, key: nil, library_section_id: nil, library_section_key: nil, library_section_title: nil, tag: nil, type: nil, count: nil, filter: nil, library_section_type: nil, tag_key: nil, tag_type: nil, thumb: nil)
          @id = id
          @key = key
          @library_section_id = library_section_id
          @library_section_key = library_section_key
          @library_section_title = library_section_title
          @tag = tag
          @type = type
          @count = count
          @filter = filter
          @library_section_type = library_section_type
          @tag_key = tag_key
          @tag_type = tag_type
          @thumb = thumb
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @key == other.key
          return false unless @library_section_id == other.library_section_id
          return false unless @library_section_key == other.library_section_key
          return false unless @library_section_title == other.library_section_title
          return false unless @tag == other.tag
          return false unless @type == other.type
          return false unless @count == other.count
          return false unless @filter == other.filter
          return false unless @library_section_type == other.library_section_type
          return false unless @tag_key == other.tag_key
          return false unless @tag_type == other.tag_type
          return false unless @thumb == other.thumb
          true
        end
      end
    end
  end
end
