# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    
      # The final status of the marker
      class GetMediaMetaDataMarker
        extend T::Sig
        include Crystalline::MetadataFields


        field :end_time_offset, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('endTimeOffset') } }

        field :id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }

        field :start_time_offset, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('startTimeOffset') } }

        field :type, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('type') } }
        # Attributes associated with the marker.
        field :attributes, T.nilable(Models::Operations::GetMediaMetaDataAttributes), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Attributes') } }

        field :final, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('final') } }


        sig { params(end_time_offset: ::Integer, id: ::Integer, start_time_offset: ::Integer, type: ::String, attributes: T.nilable(Models::Operations::GetMediaMetaDataAttributes), final: T.nilable(T::Boolean)).void }
        def initialize(end_time_offset: nil, id: nil, start_time_offset: nil, type: nil, attributes: nil, final: nil)
          @end_time_offset = end_time_offset
          @id = id
          @start_time_offset = start_time_offset
          @type = type
          @attributes = attributes
          @final = final
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @end_time_offset == other.end_time_offset
          return false unless @id == other.id
          return false unless @start_time_offset == other.start_time_offset
          return false unless @type == other.type
          return false unless @attributes == other.attributes
          return false unless @final == other.final
          true
        end
      end
    end
  end
end
