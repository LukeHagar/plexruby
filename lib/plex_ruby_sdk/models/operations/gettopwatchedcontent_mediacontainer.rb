# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class GetTopWatchedContentMediaContainer
        extend T::Sig
        include Crystalline::MetadataFields

        # Indicates whether syncing is allowed.
        field :allow_sync, T::Boolean, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('allowSync') } }
        # An plugin identifier for the media container.
        field :identifier, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('identifier') } }
        # The prefix used for media tag resource paths.
        field :media_tag_prefix, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('mediaTagPrefix') } }
        # The version number for media tags.
        field :media_tag_version, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('mediaTagVersion') } }
        # Number of media items returned in this response.
        field :size, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('size') } }

        field :metadata, T.nilable(T::Array[Models::Operations::GetTopWatchedContentMetadata]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Metadata') } }


        sig { params(allow_sync: T::Boolean, identifier: ::String, media_tag_prefix: ::String, media_tag_version: ::Integer, size: ::Integer, metadata: T.nilable(T::Array[Models::Operations::GetTopWatchedContentMetadata])).void }
        def initialize(allow_sync: nil, identifier: nil, media_tag_prefix: nil, media_tag_version: nil, size: nil, metadata: nil)
          @allow_sync = allow_sync
          @identifier = identifier
          @media_tag_prefix = media_tag_prefix
          @media_tag_version = media_tag_version
          @size = size
          @metadata = metadata
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @allow_sync == other.allow_sync
          return false unless @identifier == other.identifier
          return false unless @media_tag_prefix == other.media_tag_prefix
          return false unless @media_tag_version == other.media_tag_version
          return false unless @size == other.size
          return false unless @metadata == other.metadata
          true
        end
      end
    end
  end
end
