# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations
    GET_TOKEN_SERVERS = [
      'https://plex.tv/api/v2'
    ].freeze

    class GetTokenRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The PinID to retrieve an access token for
      field :pin_id, String, { 'path_param': { 'field_name': 'pinID', 'style': 'simple', 'explode': false } }
      # Plex Authentication Token
      field :x_plex_client_identifier, String, { 'header': { 'field_name': 'X-Plex-Client-Identifier', 'style': 'simple', 'explode': false } }


      sig { params(pin_id: String, x_plex_client_identifier: String).void }
      def initialize(pin_id: nil, x_plex_client_identifier: nil)
        @pin_id = pin_id
        @x_plex_client_identifier = x_plex_client_identifier
      end
    end


    class GetTokenErrors < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :code, T.nilable(Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('code') } }

      field :message, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('message') } }

      field :status, T.nilable(Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status') } }


      sig { params(code: T.nilable(Float), message: T.nilable(String), status: T.nilable(Float)).void }
      def initialize(code: nil, message: nil, status: nil)
        @code = code
        @message = message
        @status = status
      end
    end

    # X-Plex-Client-Identifier is missing
    class GetTokenResponseBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :errors, T.nilable(T::Array[Operations::GetTokenErrors]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('errors') } }


      sig { params(errors: T.nilable(T::Array[Operations::GetTokenErrors])).void }
      def initialize(errors: nil)
        @errors = errors
      end
    end


    class GetTokenResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # X-Plex-Client-Identifier is missing
      field :object, T.nilable(Operations::GetTokenResponseBody)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, object: T.nilable(Operations::GetTokenResponseBody)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, object: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @object = object
      end
    end
  end
end
