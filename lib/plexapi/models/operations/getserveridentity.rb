# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class GetServerIdentityErrors < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :code, T.nilable(Float), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('code') } }

      field :message, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('message') } }

      field :status, T.nilable(Float), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status') } }


      sig { params(code: T.nilable(Float), message: T.nilable(String), status: T.nilable(Float)).void }
      def initialize(code: nil, message: nil, status: nil)
        @code = code
        @message = message
        @status = status
      end
    end

    # Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
    class GetServerIdentityServerResponseBody < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :errors, T.nilable(T::Array[Operations::GetServerIdentityErrors]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('errors') } }


      sig { params(errors: T.nilable(T::Array[Operations::GetServerIdentityErrors])).void }
      def initialize(errors: nil)
        @errors = errors
      end
    end


    class GetServerIdentityMediaContainer < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :claimed, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('claimed') } }

      field :machine_identifier, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('machineIdentifier') } }

      field :size, T.nilable(Float), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('size') } }

      field :version, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('version') } }


      sig { params(claimed: T.nilable(T::Boolean), machine_identifier: T.nilable(String), size: T.nilable(Float), version: T.nilable(String)).void }
      def initialize(claimed: nil, machine_identifier: nil, size: nil, version: nil)
        @claimed = claimed
        @machine_identifier = machine_identifier
        @size = size
        @version = version
      end
    end

    # The Transcode Sessions
    class GetServerIdentityResponseBody < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :media_container, T.nilable(Operations::GetServerIdentityMediaContainer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('MediaContainer') } }


      sig { params(media_container: T.nilable(Operations::GetServerIdentityMediaContainer)).void }
      def initialize(media_container: nil)
        @media_container = media_container
      end
    end


    class GetServerIdentityResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # The Transcode Sessions
      field :two_hundred_application_json_object, T.nilable(Operations::GetServerIdentityResponseBody)
      # Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
      field :four_hundred_and_one_application_json_object, T.nilable(Operations::GetServerIdentityServerResponseBody)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, two_hundred_application_json_object: T.nilable(Operations::GetServerIdentityResponseBody), four_hundred_and_one_application_json_object: T.nilable(Operations::GetServerIdentityServerResponseBody)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, two_hundred_application_json_object: nil, four_hundred_and_one_application_json_object: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @two_hundred_application_json_object = two_hundred_application_json_object
        @four_hundred_and_one_application_json_object = four_hundred_and_one_application_json_object
      end
    end
  end
end
