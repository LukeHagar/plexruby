# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class PerformVoiceSearchRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The query term
      field :query, String, { 'query_param': { 'field_name': 'query', 'style': 'form', 'explode': true } }
      # The number of items to return per hub
      field :limit, T.nilable(Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # This gives context to the search, and can result in re-ordering of search result hubs
      field :section_id, T.nilable(Float), { 'query_param': { 'field_name': 'sectionId', 'style': 'form', 'explode': true } }


      sig { params(query: String, limit: T.nilable(Float), section_id: T.nilable(Float)).void }
      def initialize(query: nil, limit: nil, section_id: nil)
        @query = query
        @limit = limit
        @section_id = section_id
      end
    end


    class PerformVoiceSearchErrors < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :code, T.nilable(Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('code') } }

      field :message, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('message') } }

      field :status, T.nilable(Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status') } }


      sig { params(code: T.nilable(Float), message: T.nilable(String), status: T.nilable(Float)).void }
      def initialize(code: nil, message: nil, status: nil)
        @code = code
        @message = message
        @status = status
      end
    end

    # Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
    class PerformVoiceSearchResponseBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :errors, T.nilable(T::Array[Operations::PerformVoiceSearchErrors]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('errors') } }


      sig { params(errors: T.nilable(T::Array[Operations::PerformVoiceSearchErrors])).void }
      def initialize(errors: nil)
        @errors = errors
      end
    end


    class PerformVoiceSearchResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
      field :object, T.nilable(Operations::PerformVoiceSearchResponseBody)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, object: T.nilable(Operations::PerformVoiceSearchResponseBody)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, object: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @object = object
      end
    end
  end
end
