# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class GetLibraryType < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('active') } }

      field :field, T.nilable(T::Array[::OpenApiSDK::Operations::Field]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('Field') } }

      field :filter, T.nilable(T::Array[::OpenApiSDK::Operations::Filter]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('Filter') } }

      field :key, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('key') } }

      field :sort, T.nilable(T::Array[::OpenApiSDK::Operations::Sort]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('Sort') } }

      field :title, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title') } }

      field :type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type') } }


      sig { params(active: T.nilable(T::Boolean), field: T.nilable(T::Array[::OpenApiSDK::Operations::Field]), filter: T.nilable(T::Array[::OpenApiSDK::Operations::Filter]), key: T.nilable(::String), sort: T.nilable(T::Array[::OpenApiSDK::Operations::Sort]), title: T.nilable(::String), type: T.nilable(::String)).void }
      def initialize(active: nil, field: nil, filter: nil, key: nil, sort: nil, title: nil, type: nil)
        @active = active
        @field = field
        @filter = filter
        @key = key
        @sort = sort
        @title = title
        @type = type
      end
    end
  end
end
